<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0801.1333                               -->
<workbook original-version='18.1' source-build='2020.3.0 (20203.20.0801.1333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='comparision between temperateur of diffirent sensor in the same device' inline='true' name='federated.0veulqk1tukr2012euaer0sn3r2s' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='comparision between temperateur of diffirent sensor in the same device' name='textscan.1otu9zt1mk6dxl13r3zr81qgnowj'>
            <connection class='textscan' directory='C:/Users/Unix/Downloads' filename='comparision between temperateur of diffirent sensor in the same device.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1otu9zt1mk6dxl13r3zr81qgnowj' name='comparision between temperateur of diffirent sensor in the same device.csv' table='[comparision between temperateur of diffirent sensor in the same device#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='datetime' name='date time' ordinal='0' />
            <column datatype='real' name='dht22_temperature' ordinal='1' />
            <column datatype='real' name='bme680_temperature' ordinal='2' />
            <column datatype='real' name='mhz19_temperature' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1otu9zt1mk6dxl13r3zr81qgnowj' name='comparision between temperateur of diffirent sensor in the same device.csv' table='[comparision between temperateur of diffirent sensor in the same device#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='datetime' name='date time' ordinal='0' />
            <column datatype='real' name='dht22_temperature' ordinal='1' />
            <column datatype='real' name='bme680_temperature' ordinal='2' />
            <column datatype='real' name='mhz19_temperature' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[comparision between temperateur of diffirent sensor in the same device.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date time</remote-name>
            <remote-type>135</remote-type>
            <local-name>[date time]</local-name>
            <parent-name>[comparision between temperateur of diffirent sensor in the same device.csv]</parent-name>
            <remote-alias>date time</remote-alias>
            <ordinal>0</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[comparision between temperateur of diffirent sensor in the same device.csv_9ABC4869DDCE4E4F87F9D56C8951499B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dht22_temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dht22_temperature]</local-name>
            <parent-name>[comparision between temperateur of diffirent sensor in the same device.csv]</parent-name>
            <remote-alias>dht22_temperature</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[comparision between temperateur of diffirent sensor in the same device.csv_9ABC4869DDCE4E4F87F9D56C8951499B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bme680_temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bme680_temperature]</local-name>
            <parent-name>[comparision between temperateur of diffirent sensor in the same device.csv]</parent-name>
            <remote-alias>bme680_temperature</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[comparision between temperateur of diffirent sensor in the same device.csv_9ABC4869DDCE4E4F87F9D56C8951499B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mhz19_temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mhz19_temperature]</local-name>
            <parent-name>[comparision between temperateur of diffirent sensor in the same device.csv]</parent-name>
            <remote-alias>mhz19_temperature</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[comparision between temperateur of diffirent sensor in the same device.csv_9ABC4869DDCE4E4F87F9D56C8951499B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='comparision between temperateur of diffirent sensor in the same device.csv' datatype='table' name='[__tableau_internal_object_id__].[comparision between temperateur of diffirent sensor in the same device.csv_9ABC4869DDCE4E4F87F9D56C8951499B]' role='measure' type='quantitative' />
      <column caption='Bme680 Temperature' datatype='real' name='[bme680_temperature]' role='measure' type='quantitative' />
      <column caption='Date Time' datatype='datetime' name='[date time]' role='dimension' type='ordinal' />
      <column caption='Dht22 Temperature' datatype='real' name='[dht22_temperature]' role='measure' type='quantitative' />
      <column caption='Mhz19 Temperature' datatype='real' name='[mhz19_temperature]' role='measure' type='quantitative' />
      <column-instance column='[bme680_temperature]' derivation='Attribute' name='[attr:bme680_temperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dht22_temperature]' derivation='Attribute' name='[attr:dht22_temperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mhz19_temperature]' derivation='Attribute' name='[attr:mhz19_temperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bme680_temperature]' derivation='Sum' name='[sum:bme680_temperature:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0veulqk1tukr2012euaer0sn3r2s].[attr:dht22_temperature:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0veulqk1tukr2012euaer0sn3r2s].[attr:bme680_temperature:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0veulqk1tukr2012euaer0sn3r2s].[sum:bme680_temperature:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0veulqk1tukr2012euaer0sn3r2s].[attr:mhz19_temperature:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;France&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='comparision between temperateur of diffirent sensor in the same device.csv' id='comparision between temperateur of diffirent sensor in the same device.csv_9ABC4869DDCE4E4F87F9D56C8951499B'>
            <properties context=''>
              <relation connection='textscan.1otu9zt1mk6dxl13r3zr81qgnowj' name='comparision between temperateur of diffirent sensor in the same device.csv' table='[comparision between temperateur of diffirent sensor in the same device#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='datetime' name='date time' ordinal='0' />
                  <column datatype='real' name='dht22_temperature' ordinal='1' />
                  <column datatype='real' name='bme680_temperature' ordinal='2' />
                  <column datatype='real' name='mhz19_temperature' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Temperature ( MHZ19, DHT22, BME680)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='comparision between temperateur of diffirent sensor in the same device' name='federated.0veulqk1tukr2012euaer0sn3r2s' />
          </datasources>
          <datasource-dependencies datasource='federated.0veulqk1tukr2012euaer0sn3r2s'>
            <column-instance column='[bme680_temperature]' derivation='Attribute' name='[attr:bme680_temperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dht22_temperature]' derivation='Attribute' name='[attr:dht22_temperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mhz19_temperature]' derivation='Attribute' name='[attr:mhz19_temperature:qk]' pivot='key' type='quantitative' />
            <column caption='Bme680 Temperature' datatype='real' name='[bme680_temperature]' role='measure' type='quantitative' />
            <column caption='Date Time' datatype='datetime' name='[date time]' role='dimension' type='ordinal' />
            <column caption='Dht22 Temperature' datatype='real' name='[dht22_temperature]' role='measure' type='quantitative' />
            <column caption='Mhz19 Temperature' datatype='real' name='[mhz19_temperature]' role='measure' type='quantitative' />
            <column-instance column='[date time]' derivation='None' name='[none:date time:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0veulqk1tukr2012euaer0sn3r2s].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0veulqk1tukr2012euaer0sn3r2s].[attr:bme680_temperature:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0veulqk1tukr2012euaer0sn3r2s].[attr:dht22_temperature:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0veulqk1tukr2012euaer0sn3r2s].[attr:mhz19_temperature:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0veulqk1tukr2012euaer0sn3r2s].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0veulqk1tukr2012euaer0sn3r2s].[none:date time:qk]' field-type='quantitative' max='#2020-09-03 14:09:51.987#' min='#2020-07-23 08:33:35.793#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0veulqk1tukr2012euaer0sn3r2s].[Multiple Values]' field-type='quantitative' max='48.263463476373516' min='-5.1227793017443064' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0veulqk1tukr2012euaer0sn3r2s].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff007f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0veulqk1tukr2012euaer0sn3r2s].[Multiple Values]</rows>
        <cols>[federated.0veulqk1tukr2012euaer0sn3r2s].[none:date time:qk]</cols>
      </table>
      <simple-id uuid='{81B20641-101C-4ECD-8CE7-29EC81E659A3}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='3' param='[federated.0veulqk1tukr2012euaer0sn3r2s].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0veulqk1tukr2012euaer0sn3r2s].[:Measure Names]</field>
            <field>[federated.0veulqk1tukr2012euaer0sn3r2s].[yr:date time:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{0A85BC20-6604-47D1-8BB6-0FC51AF6E9CC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      5h98iKgFEYA3+QAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
